#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10
#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define JMP  4
#define OSL  5
#define COMBOMS 25

&lt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <>;
};

/ {
    combos {
        // BASE

        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <COMBOMS>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        compatible = "zmk,combos";

        // GLOBAL

        compatible = "zmk,combos";
        compatible = "zmk,combos";
        compatible = "zmk,combos";

        combo_spc_2 {
            timeout-ms = <COMBOMS>;
            key-positions = <13 14>;
            bindings = <&kp SPACE>;
        };

        compatible = "zmk,combos";

        combo_bspc {
            timeout-ms = <COMBOMS>;
            key-positions = <15 16>;
            bindings = <&kp BSPC>;
        };

        compatible = "zmk,combos";

        combo_del {
            timeout-ms = <COMBOMS>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };

        compatible = "zmk,combos";
        compatible = "zmk,combos";

        combo_ret {
            timeout-ms = <COMBOMS>;
            key-positions = <25 26>;
            bindings = <&kp RET>;
        };

        compatible = "zmk,combos";
        compatible = "zmk,combos";

        combo_ctrlz {
            timeout-ms = <COMBOMS>;
            key-positions = <20 21>;
            bindings = <&macro_ctrlz>;
        };

        compatible = "zmk,combos";

        combo_ctrlshftz {
            timeout-ms = <COMBOMS>;
            key-positions = <20 21 22>;
            bindings = <&macro_ctrlshftz>;
        };

        compatible = "zmk,combos";

        combo_ctrlx {
            timeout-ms = <COMBOMS>;
            key-positions = <21 22>;
            bindings = <&macro_ctrlx>;
        };

        compatible = "zmk,combos";

        combo_ctrlc {
            timeout-ms = <COMBOMS>;
            key-positions = <22 23>;
            bindings = <&macro_ctrlc>;
        };

        compatible = "zmk,combos";

        combo_ctrlv {
            timeout-ms = <COMBOMS>;
            key-positions = <23 24>;
            bindings = <&macro_ctrlv>;
        };

        compatible = "zmk,combos";

        combo_fn {
            timeout-ms = <COMBOMS>;
            key-positions = <30 31>;
            bindings = <&mo 4>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };
    };

    macros {
        macro_esc: macro_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp ESC>;
        };

        tabcw: tabcw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp TAB>;
        };

        tabccw: tabccw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_ctrlz: macro_ctrlz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_ctrlshftz: macro_ctrlshftz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_ctrlx: macro_ctrlx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_ctrlc: macro_ctrlc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_ctrlv: macro_ctrlv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_ctrls: macro_ctrls {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_up: macro_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_down: macro_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        os_hk: os_hk {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        m_set: m_set {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&kp M>,
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        m_jmp: m_jmp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        m_paste: m_paste {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&kp DQT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&kp P>;
        };

        m_dkp: m_dkp {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>;
        };
    };

    behaviors {
        encoder_alt_tab: encoder_alt_tab {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&tabcw>, <&tabccw>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <160>;
            require-prior-idle-ms = <140>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <14 24 30 31 0 0 1 2 3 4 11 12 13 14 21 22 23 24 30 31 20 10>;
        };

        ctl: custom_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;

            tapping-term-ms = <220>;
            quick-tap-ms = <175>;
        };

        htl: hold_toggle_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&tog>;

            tapping-term-ms = <220>;
        };

        csl: custom_sticky_layer {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <160>;
            require-prior-idle-ms = <140>;
            hold-trigger-on-release;
            label = "HMR";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

            bindings = <
&kp Q            &kp W            &kp F         &kp P              &kp B        &kp J        &kp L               &kp U         &kp Y             &hmr DOUBLE_QUOTES SINGLE_QUOTE
&hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G        &kp M        &hmr RIGHT_SHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O
&kp Z            &kp X            &kp C         &kp D              &kp V        &kp K        &kp H               &kp COMMA     &kp PERIOD        &hmr QUESTION SLASH
                                                &lt 1 ESCAPE       &lt 5 SPACE  &lt 3 ENTER  &lt 2 BACKSPACE
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_DOWN PG_UP>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            bindings = <
&hml LEFT_BRACE LEFT_BRACKET  &hml AMPERSAND N7          &hml ASTRK N8          &hml LEFT_PARENTHESIS N9  &hml RIGHT_BRACE RIGHT_BRACKET  &kp K_PLAY_PAUSE  &kp K_PREVIOUS  &kp C_VOL_DN    &kp C_VOLUME_UP  &kp K_NEXT
&kp RGUI                      &kp LALT                   &kp LCTRL              &kp LSHFT                 &kp PRINTSCREEN                 &caps_word        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW
&hml TILDE GRAVE              &hml EXCLAMATION NUMBER_1  &hml AT_SIGN NUMBER_2  &hml HASH NUMBER_3        &trans                          &kp INSERT        &kp HOME        &kp PAGE_DOWN   &kp PG_UP        &kp END
                                                                                &trans                    &trans                          &kp SPACE         &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "num";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

            bindings = <
&kp LBKT       &kp N7  &hml LCTRL N8  &hml LSHFT N9                    &kp RBKT         &kp LBRC   &kp NUMBER_0     &kp UNDER  &kp PIPE       &trans
&kp SEMICOLON  &kp N4  &kp N5         &kp N6                           &kp EQUAL        &kp RBRC   &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI
&kp GRAVE      &kp N1  &kp N2         &kp N3                           &kp KP_MULTIPLY  &kp DOT    &macro_up        &trans     &macro_down    &trans
                                      &hml RIGHT_PARENTHESIS NUMBER_0  &kp MINUS        &kp SPACE  &skq RSHFT
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN_ARROW UP_ARROW>,
                <&inc_dec_kp K_PREVIOUS K_NEXT>;
        };

        sim_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "SYM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND  &hml LCTRL KP_MULTIPLY  &hml RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp RIGHT_BRACE  &trans     &trans           &trans     &trans         &trans
&kp COLON       &kp DLLR       &kp PRCNT               &kp CARET                                &hml EQUAL PLUS  &trans     &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI
&kp TILDE       &kp EXCL       &kp AT                  &kp HASH                                 &kp PIPE         &trans     &trans           &trans     &trans         &trans
                                                       &kp RIGHT_PARENTHESIS                    &kp UNDER        &kp SPACE  &skq RSHFT
            >;

            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fn_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "fn";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

            bindings = <
&sys_reset    &trans        &trans     &trans          &trans  &trans      &kp F7      &kp F8  &kp F9  &kp F10
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans  &kp BSPC    &kp F4      &kp F5  &kp F6  &kp F11
&bootloader   &trans        &trans     &trans          &trans  &kp ESC     &kp F1      &kp F2  &kp F3  &kp F12
                                       &trans          &trans  &skq LCTRL  &skq RSHFT
            >;

            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_mouse_layer {
            bindings = <
&bt BT_CLR_ALL  &ext_power EP_TOG  &trans        &trans        &bt BT_PRV    &trans    &trans          &trans          &trans        &trans
&kp LGUI        &kp LALT           &kp LCTRL     &kp LSHFT     &bt BT_NXT    &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&bt BT_CLR      &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &mkp MB3  &trans          &trans          &trans        &trans
                                                 &trans        &trans        &mkp MB1  &mkp MB2
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_DOWN PG_UP>,
                <&inc_dec_kp C_NEXT K_PREV>;
        };

        os_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "OS";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

            bindings = <
&kp LA(F4)  &trans    &os_hk T  &os_hk H  &trans  &trans  &trans  &trans  &trans  &trans
&os_hk A    &os_hk V  &os_hk C  &os_hk F  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &os_hk E  &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans    &trans  &trans  &trans
            >;

            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
